---
import Layout from '../layouts/Layout.astro';
import Card from '../components/Card.astro';

---

<Layout title='hand-tracking'>
    
    <a-scene>
        <a-assets>
            <!-- Single source video. -->
            <video
                id="video-1"
                style="display:none"
                loop
                crossorigin="anonymous"
                
                playsinline
                webkit-playsinline
            >
                <source
                    type="video/mp4"
                    src="/neom_-_360.mp4"
                />
            </video>

            <video
                id="video-2"
                style="display:none"
                loop
                crossorigin="anonymous"
                playsinline
                webkit-playsinline
            >
                <source
                    type="video/mp4"
                    src="/sagia_scene_setter.mp4"
                />
            </video>

            <image id="ui-backplate" src="/UI-Backplate.png"></image>
            <image id="ui-backplate" src="/UI-Border.png"></image>
        </a-assets>
        
        <!-- <a-entity id="leftHand"  hand-tracking-controls="hand: left; modelColor:#555555">
            <a-text id="leftText" material="side: double"></a-text>
            <a-entity raycaster="objects: .collidable; showLine: true;"></a-entity>
        </a-entity>
        <a-entity id="rightHand"  hand-tracking-controls="hand: right; modelColor:#555555">
            <a-text id="rightText" material="side: double"></a-text>
            <a-entity raycaster="objects: .collidable; showLine: true;"></a-entity>
        </a-entity> -->

        

        <a-box color="tomato" depth="1" height="1" width="1" position="1 0 -2">

        </a-box>

        <!--  left: 1; right: 1; top; 1; bottom: 1; -->
        <!-- <a-gui-slider width="2.5" height="0.75"
        onclick="slideActionFunction"
        percent="0.29"
        margin="0 0 0.05 0">
        <a-gui-button> -->
            <a-entity position="0 1.5 -0.5">
                <a-entity class="collidable ui" button="label: Video 1" position="0.35 0 0">
                    <a-entity class="background" width="0.75" height="0.5" slice9="width: 0.3125; height: 0.25; left:270; right: 130; top: 270; bottom: 130; side: double; padding: 0.1; opacity: 0.5; src: /UI-Backplate.png" ></a-entity>
                    <a-entity class="border" width="0.75" height="0.5" slice9="width:  0.3125; height: 0.25; left:270; right: 130; top: 270; bottom: 130; side: double; padding: 0.1; opacity: 0.8; src: /UI-Border.png;" visible="false" position="0 0 0.001"></a-entity>
                </a-entity>
                <a-entity class="collidable ui" button="label: Video 2" position="0 0 0">
                    <a-entity class="background" width="0.75" height="0.5" slice9="width: 0.3125; height: 0.25; left:270; right: 130; top: 270; bottom: 130; side: double; padding: 0.1; opacity: 0.5; src: /UI-Backplate.png" ></a-entity>
                    <a-entity class="border" width="0.75" height="0.5" slice9="width:  0.3125; height: 0.25; left:270; right: 130; top: 270; bottom: 130; side: double; padding: 0.1; opacity: 0.8; src: /UI-Border.png;" visible="false" position="0 0 0.001"></a-entity>
                </a-entity>
                <a-entity class="collidable ui" button="label: Video 3" position="-0.35 0 0">
                    <a-entity class="background" width="0.75" height="0.5" slice9="width: 0.3125; height: 0.25; left:270; right: 130; top: 270; bottom: 130; side: double; padding: 0.1; opacity: 0.5; src: /UI-Backplate.png" ></a-entity>
                    <a-entity class="border" width="0.75" height="0.5" slice9="width:  0.3125; height: 0.25; left:270; right: 130; top: 270; bottom: 130; side: double; padding: 0.1; opacity: 0.8; src: /UI-Border.png;" visible="false" position="0 0 0.001"></a-entity>
                </a-entity>
            </a-entity>
            
        <!-- </a-gui-button>
            <a-entity class="collidable ui">
                <a-entity class="background" width="0.75" height="0.5" slice9="width: 0.3125; height: 0.25; left:270; right: 130; top: 270; bottom: 130; side: double; padding: 0.1; src: /UI-Backplate.png" position="0 1 -0.5"></a-entity>
                <a-entity class="border" width="0.75" height="0.5" slice9="width:  0.3125; height: 0.25; left:0; right: 0; top: 0; bottom: 0; side: double; padding: 0; src: /UI-Border.png; transparent: true; opacity: 0.5" position="0 1 -0.5"></a-entity>
            </a-entity>
        </a-gui-slider> -->
        

        <a-entity id="menu" menu position="0 1.0 -0.5" rotation="-45 0 0" event-manager>
            <!-- <a-entity slider position="0 0.10 0"></a-entity> -->
            <!-- <a-entity class="video-selector" id="video-1" button="label: video-1; " position="-0.15 0 0"></a-entity>
            <a-entity class="video-selector" id="video-2" button="label: video-2" position="0 0 0"></a-entity>
            <a-entity class="video-selector" id="video-3" button="label: video-3" position="0.15 0 0"></a-entity> -->
            <!-- <a-entity id="clear" button="label: Clear; width: 0.20;" position="0 -0.10 0"></a-entity> -->
          </a-entity>
          <a-entity hand-tracking-controls="hand: left"></a-entity>
          <a-entity hand-tracking-controls="hand: right"></a-entity>

          <a-entity id="sphere-container">
            <a-videosphere
                rotation="0 0 0"
                src="#video-1"
                id="sphere-video-1"
                visible="false"
                >
            </a-videosphere>
          </a-entity>
        

        <!-- <a-videosphere
            rotation="0 180 0"
            src="#video-2"
            id="sphere-video-2"
            visible="false"
        >
        </a-videosphere> -->
        <!-- <a-passthrough width="16" height="9"></a-passthrough> -->

        <a-camera
            user-height="0.5"
            
            collider-check>
        
        </a-camera>
    </a-scene>
</Layout>
		
<script>
    
	
    // document.getElementById("leftText").setAttribute("value", document.getElementById("leftHand").object3D.position)
    // document.getElementById("rightText").setAttribute("value", document.getElementById("rightHand").object3D.position)
    
    AFRAME.registerComponent('collider-check', {
  dependencies: ['raycaster'],

  init: function () {
    this.animate = false
    var intersectedItems = []
    // this.el.addEventListener('raycaster-intersection', function (e) {
      
    //   e.detail.els.map((i) => {
        
    //     if(i.classList.contains("collidable")){
            
    //         intersectedItems.push(i)
    //     } else if(i.object3D.el.parentEl.classList.contains("collidable")){
    //         intersectedItems.push(i.object3D.el.parentEl)
    //     }
    //   })
    // //   console.log(intersectedItems)
    //   if(intersectedItems.length > 1){
    //     if(intersectedItems[0].classList.contains('ui')){
    //     const currentAtt = intersectedItems[0].querySelector('.border').getAttribute("slice9")
        
    //     currentAtt.left = 270
    //     currentAtt.top = 270
    //     currentAtt.right = 130
    //     currentAtt.bottom = 130
    //     // left:90; right: 310; top: 90; bottom: 310;
    //     // intersectedItems[0].querySelector('.border').removeAttribute("slice9")
    //     console.log(JSON.stringify(currentAtt).replace(/[{}"]/g, '').replace(/,/g, '; '))
    //     const jsonString = JSON.stringify(currentAtt).replace(/[{}"]/g, '').replace(/,/g, '; ')
    //     intersectedItems[0].querySelector('.border').setAttribute(`slice9`, `${jsonString}`)
    //   }
    //   }
      
    // });
    
    // this.el.addEventListener('raycaster-intersection', function (e) {
      
    //   e.detail.els.map((i) => {
        
    //     if(i.classList.contains("collidable")){
            
    //         intersectedItems.push(i)
    //     } else if(i.object3D.el.parentEl.classList.contains("collidable")){
    //         intersectedItems.push(i.object3D.el.parentEl)
    //     }
    //   })
    // //   console.log(intersectedItems)
    //   if(intersectedItems.length > 1){
    //     if(intersectedItems[0].classList.contains('ui')){
    //     const currentAtt = intersectedItems[0].querySelector('.border').getAttribute("slice9")
        
    //     currentAtt.left = 270
    //     currentAtt.top = 270
    //     currentAtt.right = 130
    //     currentAtt.bottom = 130
    //     currentAtt.padding = 0.1
    //     // left:90; right: 310; top: 90; bottom: 310;
    //     // intersectedItems[0].querySelector('.border').removeAttribute("slice9")
    //     console.log(JSON.stringify(currentAtt).replace(/[{}"]/g, '').replace(/,/g, '; '))
    //     const jsonString = JSON.stringify(currentAtt).replace(/[{}"]/g, '').replace(/,/g, '; ')
    //     intersectedItems[0].querySelector('.border').setAttribute(`slice9`, `${jsonString}`)
    //   }
    //   }
      
    // });

    // this.el.addEventListener('raycaster-intersection-cleared', function (e) {
      
    // //   console.log(intersectedItems)
    //   if(intersectedItems.length > 1){
    //     intersectedItems.forEach(e => {
    //         if(intersectedItems[0].classList.contains('ui')){
    //     const currentAtt = intersectedItems[0].querySelector('.border').getAttribute("slice9")
        
    //     currentAtt.left = 0
    //     currentAtt.top = 0
    //     currentAtt.right = 0
    //     currentAtt.bottom = 0
    //     currentAtt.padding = 0
    //     // left:90; right: 310; top: 90; bottom: 310;
    //     // intersectedItems[0].querySelector('.border').removeAttribute("slice9")
    //     console.log(JSON.stringify(currentAtt).replace(/[{}"]/g, '').replace(/,/g, '; '))
    //     const jsonString = JSON.stringify(currentAtt).replace(/[{}"]/g, '').replace(/,/g, '; ')
    //     intersectedItems[0].querySelector('.border').setAttribute(`slice9`, `${jsonString}`)
    //   }
    //     })
    //     intersectedItems = []
    //   }
      
    // });

    
  }, 
  tick(){
    
}
});
</script>

<!-- <script src="https://aframe.io/releases/1.4.0/aframe.min.js" is:inline></script> -->
